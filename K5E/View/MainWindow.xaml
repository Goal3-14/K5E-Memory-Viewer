<shell:Window
    x:Class="K5E.View.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:K5E.View.Controls"
    xmlns:avalonDock="clr-namespace:AvalonDock;assembly=AvalonDock"
    xmlns:content="clr-namespace:K5E.Content"
    xmlns:converters="clr-namespace:K5E.Source.Mvvm.Converters"
    xmlns:coreView="clr-namespace:K5E.View"
    xmlns:docking="clr-namespace:K5E.Source.Docking"
    xmlns:intr="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:layout="clr-namespace:AvalonDock.Layout;assembly=AvalonDock"
    xmlns:layoutControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
    xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:types="clr-namespace:K5E.Engine.Common;assembly=K5E.Engine.Common"
    xmlns:view="clr-namespace:K5E.View"
    x:Name="K5EWindow"
    Title="K5E"
    Width="1280"
    Height="960"
    x:ClassModifier="public"
    AllowsTransparency="False"
    DataContext="{Binding MainViewModel, Source={StaticResource ViewModelLocator}}"
    WindowStyle="None">
    <x:Code>
        <![CDATA[ public MainWindow() { InitializeComponent(); }]]>
    </x:Code>
    <shell:Window.Resources>
        <converters:ConstraintToIconConverter x:Key="ConstraintToIconConverter" />
        <converters:IconConverter x:Key="IconConverter" />
        <converters:ProcessNameConverter x:Key="ProcessNameConverter" />
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:BooleanToVisibilityConverter
            x:Key="BooleanToHiddenConverter"
            False="Hidden"
            True="Visible" />
        <converters:DataTypeToIconConverter x:Key="DataTypeToIconConverter" />
    </shell:Window.Resources>
    <shell:WindowChrome.WindowChrome>
        <shell:WindowChrome CaptionHeight="{Binding ActualHeight, ElementName=titlebar}" />
    </shell:WindowChrome.WindowChrome>
    <intr:Interaction.Triggers>
        <intr:EventTrigger EventName="Loaded">
            <intr:InvokeCommandAction Command="{Binding LoadLayoutCommand}" CommandParameter="{Binding ., ElementName=dockManager}" />
        </intr:EventTrigger>
        <intr:EventTrigger EventName="Unloaded">
            <intr:InvokeCommandAction Command="{Binding SaveLayoutCommand}" CommandParameter="{Binding ., ElementName=dockManager}" />
        </intr:EventTrigger>
        <intr:EventTrigger EventName="ContentRendered">
            <intr:InvokeCommandAction Command="{Binding DisplayChangeLogCommand}" />
        </intr:EventTrigger>
    </intr:Interaction.Triggers>
    <shell:Border BorderBrush="{StaticResource K5EColorBlue}" BorderThickness="1">
        <shell:Grid>
            <shell:Grid.RowDefinitions>
                <!--  Title Bar Row  -->
                <shell:RowDefinition Height="Auto" />
                <!--  Menu Bar Row  -->
                <shell:RowDefinition Height="Auto" />
                <!--  Button Menu Bar Row  -->
                <shell:RowDefinition Height="Auto" />
                <!--  Docking Panel Row  -->
                <shell:RowDefinition Height="*" />
                <!--  Status Bar Row  -->
                <shell:RowDefinition Height="Auto" />
            </shell:Grid.RowDefinitions>

            <!--  Title Bar  -->
            <shell:Grid
                x:Name="titlebar"
                Grid.Row="0"
                Background="{StaticResource K5EColorFrame}">
                <shell:Grid.ColumnDefinitions>
                    <!--  Title Text Column  -->
                    <shell:ColumnDefinition />
                    <!--  Buttons  -->
                    <shell:ColumnDefinition Width="Auto" />

                </shell:Grid.ColumnDefinitions>
                <shell:Grid Grid.Column="0">

                    <shell:Grid.ColumnDefinitions>
                        <shell:ColumnDefinition Width="Auto" />
                        <shell:ColumnDefinition Width="Auto" />
                        <shell:ColumnDefinition Width="Auto" />
                        <shell:ColumnDefinition Width="Auto" />
                        <shell:ColumnDefinition Width="Auto" />
                    </shell:Grid.ColumnDefinitions>
                    <shell:Image
                        Grid.Column="0"
                        Width="24"
                        Height="24"
                        Margin="4"
                        Source="{x:Static content:Images.AppIcon}" />
                    <shell:TextBlock
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        Foreground="{StaticResource K5EColorWhite}"
                        Text="K5E" />
                </shell:Grid>
                <shell:Menu
                    Grid.Column="1"
                    VerticalAlignment="Stretch"
                    Background="Transparent">
                    <shell:MenuItem
                        Height="24"
                        Command="{Binding MinimizeCommand}"
                        CommandParameter="{Binding ElementName=K5EWindow}"
                        ToolTip="Minimize"
                        WindowChrome.IsHitTestVisibleInChrome="True">
                        <shell:MenuItem.Header>
                            <shell:Image
                                Width="16"
                                Height="16"
                                Source="{x:Static content:Images.Decreased}" />
                        </shell:MenuItem.Header>
                    </shell:MenuItem>
                    <shell:MenuItem
                        Height="24"
                        Command="{Binding MaximizeRestoreCommand}"
                        CommandParameter="{Binding ElementName=K5EWindow}"
                        ToolTip="Maximize/Restore"
                        WindowChrome.IsHitTestVisibleInChrome="True">
                        <shell:MenuItem.Header>
                            <shell:Image
                                Width="16"
                                Height="16"
                                Source="{x:Static content:Images.Maximize}" />
                        </shell:MenuItem.Header>
                    </shell:MenuItem>
                    <shell:MenuItem
                        Height="24"
                        Command="{Binding CloseCommand}"
                        CommandParameter="{Binding ElementName=K5EWindow}"
                        ToolTip="Close"
                        WindowChrome.IsHitTestVisibleInChrome="True">
                        <shell:MenuItem.Header>
                            <shell:Image
                                Width="16"
                                Height="16"
                                Source="{x:Static content:Images.X}" />
                        </shell:MenuItem.Header>
                    </shell:MenuItem>
                </shell:Menu>
            </shell:Grid>

            <!--  Menu Bar  -->
            <shell:Grid Grid.Row="1">
                <shell:Menu
                    Background="{StaticResource K5EColorFrame}"
                    BorderBrush="{StaticResource K5EColorWhite}"
                    Foreground="{StaticResource K5EColorWhite}">
                    <!--  File Header  -->
                    <shell:MenuItem
                        BorderThickness="0"
                        DataContext="{Binding Source={StaticResource ViewModelLocator}}"
                        Header="File">
                        <shell:MenuItem
                            BorderThickness="0"
                            Command="{Binding MainViewModel.CloseCommand}"
                            CommandParameter="{Binding ElementName=K5EWindow}"
                            Style="{Binding .}"
                            Header="Exit K5E"
                             />
                    </shell:MenuItem>

                    <!--  Edit Header  -->
                    <shell:MenuItem DataContext="{Binding Source={StaticResource ViewModelLocator}}" Header="Edit">
                        <shell:MenuItem
                            Header="Settings"
                            IsCheckable="True"
                            IsChecked="{Binding SettingsViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding .}"
                             />
                    </shell:MenuItem>

                    <!--  Layout Header  -->
                    <shell:MenuItem DataContext="{Binding Source={StaticResource ViewModelLocator}}" Header="Layout">
                        <shell:MenuItem
                            Command="{Binding MainViewModel.ResetLayoutCommand}"
                            CommandParameter="{Binding ., ElementName=dockManager}"
                            Style="{Binding .}"
                            Header="Reset Layout"/>
                    </shell:MenuItem>

                    <!--  Windows Header  -->
                    <shell:MenuItem DataContext="{Binding Source={StaticResource ViewModelLocator}}" Header="Windows">
                        <shell:MenuItem
                            Header="Process Selector"
                            IsCheckable="True"
                            IsChecked="{Binding ProcessSelectorViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding .}"/>
                        <shell:MenuItem
                            Header="DTM Editor"
                            IsCheckable="True"
                            IsChecked="{Binding DTMEditorViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding .}"
                             />
                        <shell:MenuItem
                            Header="Property Viewer"
                            IsCheckable="True"
                            IsChecked="{Binding PropertyViewerViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding .}"
                             />
                        <shell:MenuItem
                            Header="Heap Visualizer"
                            IsCheckable="True"
                            IsChecked="{Binding HeapVisualizerViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding .}"
                             />
                        <shell:MenuItem
                            Header="Flag Recorder"
                            IsCheckable="True"
                            IsChecked="{Binding FlagRecorderViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding .}"
                             />
                        <shell:MenuItem
                            Header="Output"
                            IsCheckable="True"
                            IsChecked="{Binding OutputViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding .}"
                             />
                    </shell:MenuItem>
                </shell:Menu>
            </shell:Grid>

            <!--  Button Menu Bar  -->
            <shell:WrapPanel Grid.Row="2" Background="{StaticResource K5EColorFrame}">
                <shell:Menu
                    Padding="4"
                    Background="Transparent"
                    DataContext="{Binding Source={StaticResource ViewModelLocator}}">
                    <shell:MenuItem Command="{Binding ProcessSelectorViewModel.Show}" ToolTip="Select a Target Process">
                        <shell:MenuItem.Header>
                            <shell:Image
                                Width="16"
                                Height="16"
                                Source="{x:Static content:Images.SelectProcess}" />
                        </shell:MenuItem.Header>
                    </shell:MenuItem>
                </shell:Menu>
                <shell:ComboBox
                    Width="196"
                    Height="24"
                    Background="{StaticResource K5EColorFrame}"
                    ItemsSource="{Binding ProcessSelectorViewModel.WindowedProcessList, Source={StaticResource ViewModelLocator}}"
                    SelectedItem="{Binding ProcessSelectorViewModel.SelectedProcess, Source={StaticResource ViewModelLocator}, Mode=TwoWay}">
                    <shell:ComboBox.ItemTemplate>
                        <shell:DataTemplate>
                            <shell:Grid>
                                <shell:Grid.ColumnDefinitions>
                                    <shell:ColumnDefinition Width="Auto" />
                                    <shell:ColumnDefinition />
                                </shell:Grid.ColumnDefinitions>
                                <shell:Image
                                    Grid.Column="0"
                                    Width="16"
                                    Height="16"
                                    Margin="0,0,6,0"
                                    Source="{Binding Path=., Converter={StaticResource IconConverter}}" />
                                <shell:TextBlock
                                    Grid.Column="1"
                                    Foreground="{StaticResource K5EColorWhite}"
                                    Text="{Binding Path=., Converter={StaticResource ProcessNameConverter}}" />
                            </shell:Grid>
                        </shell:DataTemplate>
                    </shell:ComboBox.ItemTemplate>
                </shell:ComboBox>
            </shell:WrapPanel>

            <!--  Docking Panel  -->
            <avalonDock:DockingManager
                x:Name="dockManager"
                Grid.Row="3"
                AnchorablesSource="{Binding DockingViewModel.Tools, Source={StaticResource ViewModelLocator}}"
                Background="{StaticResource K5EColorFrame}"
			    Theme="{Binding DockingViewModel.SelectedTheme.Item2, Source={StaticResource ViewModelLocator}}">
                <!--  All Dockable Windows  -->
                <avalonDock:DockingManager.LayoutItemTemplateSelector>
                    <view:ViewTemplateSelector>
                        <!--  Error Message When Missing Data Template (KEEP AS FIRST IN THIS LIST)  -->
                        <view:ViewTemplateSelector.DataTemplateErrorViewTemplate>
                            <shell:DataTemplate>
                                <view:DataTemplateError />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.DataTemplateErrorViewTemplate>
                        <!--  DTM Editor  -->
                        <view:ViewTemplateSelector.DTMEditorViewTemplate>
                            <shell:DataTemplate>
                                <view:DTMEditor />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.DTMEditorViewTemplate>
                        <!--  Property Viewer  -->
                        <view:ViewTemplateSelector.PropertyViewerViewTemplate>
                            <shell:DataTemplate>
                                <view:PropertyViewer />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.PropertyViewerViewTemplate>
                        <!--  Heap Visualizer  -->
                        <view:ViewTemplateSelector.HeapVisualizerViewTemplate>
                            <shell:DataTemplate>
                                <view:HeapVisualizer />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.HeapVisualizerViewTemplate>
                        <!--  Flag Recorder  -->
                        <view:ViewTemplateSelector.FlagRecorderViewTemplate>
                            <shell:DataTemplate>
                                <view:FlagRecorder />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.FlagRecorderViewTemplate>
                        <!--  Process Selector  -->
                        <view:ViewTemplateSelector.ProcessSelectorViewTemplate>
                            <shell:DataTemplate>
                                <view:ProcessSelector />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.ProcessSelectorViewTemplate>
                        <!--  Output  -->
                        <view:ViewTemplateSelector.OutputViewTemplate>
                            <shell:DataTemplate>
                                <view:Output />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.OutputViewTemplate>
                    </view:ViewTemplateSelector>
                </avalonDock:DockingManager.LayoutItemTemplateSelector>

                <!--  Container Style  -->
                <avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                    <docking:PanesStyleSelector>
                        <!--  General Docking Tools Style  -->
                        <docking:PanesStyleSelector.ToolStyle>
                            <shell:Style TargetType="{x:Type layoutControls:LayoutAnchorableItem}">
                                <shell:Setter Property="Title" Value="{Binding Model.Title}" />
                                <shell:Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                                <shell:Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BooleanToHiddenConverter}}" />
                                <shell:Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                                <shell:Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                                <shell:Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                            </shell:Style>
                        </docking:PanesStyleSelector.ToolStyle>
                    </docking:PanesStyleSelector>
                </avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                <avalonDock:DockingManager.LayoutUpdateStrategy>
                    <coreView:LayoutInitializer />
                </avalonDock:DockingManager.LayoutUpdateStrategy>

                <!--  Layout Style  -->
                <layout:LayoutRoot>
                    <!--  Docking Group for All Windows  -->
                    <layout:LayoutPanel />
                </layout:LayoutRoot>
            </avalonDock:DockingManager>

            <!--  Status Bar  -->
            <shell:Border
                Grid.Row="4"
                Height="24"
                Background="{StaticResource K5EColorBlue}"
                DataContext="{Binding TaskTrackerViewModel, Source={StaticResource ViewModelLocator}}">
                <shell:Grid>
                    <shell:ItemsControl HorizontalAlignment="Right" ItemsSource="{Binding Path=TrackedTasks}">
                        <shell:ItemsControl.ItemTemplate>
                            <shell:DataTemplate>
                                <shell:WrapPanel VerticalAlignment="Center">
                                    <shell:TextBlock
                                        Padding="4,0,4,0"
                                        VerticalAlignment="Center"
                                        Foreground="{StaticResource K5EColorWhite}"
                                        Text="{Binding Path=Name}" />
                                    <shell:Grid>
                                        <shell:ProgressBar Width="96" Value="{Binding Path=Progress, Mode=OneWay}" />
                                        <shell:TextBlock
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Foreground="{StaticResource K5EColorRed}"
                                            Text="(Canceling)"
                                            Visibility="{Binding Path=IsCanceled, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    </shell:Grid>
                                    <shell:Button
                                        VerticalAlignment="Center"
                                        Background="Transparent"
                                        Command="{Binding TaskTrackerViewModel.CancelTaskCommand, Source={StaticResource ViewModelLocator}}"
                                        CommandParameter="{Binding .}"
                                        ToolTip="Cancel Action">
                                        <shell:Image
                                            Width="16"
                                            Height="16"
                                            Source="{x:Static content:Images.Cancel}" />
                                    </shell:Button>
                                </shell:WrapPanel>
                            </shell:DataTemplate>
                        </shell:ItemsControl.ItemTemplate>
                        <shell:ItemsControl.ItemsPanel>
                            <shell:ItemsPanelTemplate>
                                <shell:StackPanel Orientation="Horizontal" />
                            </shell:ItemsPanelTemplate>
                        </shell:ItemsControl.ItemsPanel>
                    </shell:ItemsControl>
                </shell:Grid>
            </shell:Border>
        </shell:Grid>
    </shell:Border>
</shell:Window>
